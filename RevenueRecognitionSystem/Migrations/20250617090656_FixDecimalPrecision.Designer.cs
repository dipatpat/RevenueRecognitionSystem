// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueRecognitionSystem.Infrastructure.DAL;

#nullable disable

namespace RevenueRecognitionSystem.Migrations
{
    [DbContext(typeof(RevenueRecognitionDbContext))]
    [Migration("20250617090656_FixDecimalPrecision")]
    partial class FixDecimalPrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Clients.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasDiscriminator<string>("ClientType").HasValue("Client");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Discounts.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Summer Upfront Deal",
                            Percentage = 0.15m,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Upfront"
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Back to School Sub Discount",
                            Percentage = 0.10m,
                            StartDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Subscription"
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Payments.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<int>("LicenceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 8500m,
                            Confirmed = true,
                            LicenceId = 1,
                            PaymentDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 0,
                            TransactionReference = "TX123456789"
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Modules.Licence.Models.Licence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupportYears")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Licences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            EndDate = new DateTime(2026, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinalPrice = 8500m,
                            IsSigned = true,
                            PaymentDeadline = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 1,
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupportYears = 2
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Modules.Software.Modules.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseUpfrontPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailableAsSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailableAsUpfront")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Software");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUpfrontPrice = 0m,
                            Category = "Education",
                            Description = "Educational suite for remote learning",
                            IsAvailableAsSubscription = true,
                            IsAvailableAsUpfront = true,
                            Name = "EduMaster",
                            Version = "1.0.0"
                        },
                        new
                        {
                            Id = 2,
                            BaseUpfrontPrice = 0m,
                            Category = "Finance",
                            Description = "Financial analytics and forecasting",
                            IsAvailableAsSubscription = true,
                            IsAvailableAsUpfront = false,
                            Name = "FinTracker",
                            Version = "3.2.1"
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Clients.Models.CompanyClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Features.Clients.Models.Client");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Company");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Address = "Krakow, Poland",
                            Email = "contact@techcorp.com",
                            PhoneNumber = "987654321",
                            KRS = "1234567890",
                            Name = "TechCorp"
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Clients.Models.IndividualClient", b =>
                {
                    b.HasBaseType("RevenueRecognitionSystem.Features.Clients.Models.Client");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Individual");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Warsaw, Poland",
                            Email = "anna.nowak@example.com",
                            PhoneNumber = "123456789",
                            FirstName = "Anna",
                            IsDeleted = false,
                            LastName = "Nowak",
                            Pesel = "99010112345"
                        });
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Payments.Models.Payment", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Modules.Licence.Models.Licence", "Licence")
                        .WithMany("Payments")
                        .HasForeignKey("LicenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Licence");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Modules.Licence.Models.Licence", b =>
                {
                    b.HasOne("RevenueRecognitionSystem.Features.Clients.Models.Client", "Client")
                        .WithMany("Licences")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognitionSystem.Modules.Software.Modules.Software", "Software")
                        .WithMany("Licences")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Features.Clients.Models.Client", b =>
                {
                    b.Navigation("Licences");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Modules.Licence.Models.Licence", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RevenueRecognitionSystem.Modules.Software.Modules.Software", b =>
                {
                    b.Navigation("Licences");
                });
#pragma warning restore 612, 618
        }
    }
}
